# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: lights.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='lights.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=b'\n\x0clights.proto\"\x1d\n\x0cPowerRequest\x12\r\n\x05state\x18\x01 \x01(\x08\"\x1e\n\rPowerResponse\x12\r\n\x05state\x18\x01 \x01(\x08\"\x1f\n\rColourRequest\x12\x0e\n\x06\x63olour\x18\x01 \x01(\t\" \n\x0e\x43olourResponse\x12\x0e\n\x06\x63olour\x18\x01 \x01(\t2m\n\x0cLightService\x12*\n\x07powerOn\x12\r.PowerRequest\x1a\x0e.PowerResponse\"\x00\x12\x31\n\x0c\x63hangeColour\x12\x0e.ColourRequest\x1a\x0f.ColourResponse\"\x00\x62\x06proto3'
)




_POWERREQUEST = _descriptor.Descriptor(
  name='PowerRequest',
  full_name='PowerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='PowerRequest.state', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=16,
  serialized_end=45,
)


_POWERRESPONSE = _descriptor.Descriptor(
  name='PowerResponse',
  full_name='PowerResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='state', full_name='PowerResponse.state', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=47,
  serialized_end=77,
)


_COLOURREQUEST = _descriptor.Descriptor(
  name='ColourRequest',
  full_name='ColourRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='colour', full_name='ColourRequest.colour', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=79,
  serialized_end=110,
)


_COLOURRESPONSE = _descriptor.Descriptor(
  name='ColourResponse',
  full_name='ColourResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='colour', full_name='ColourResponse.colour', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=144,
)

DESCRIPTOR.message_types_by_name['PowerRequest'] = _POWERREQUEST
DESCRIPTOR.message_types_by_name['PowerResponse'] = _POWERRESPONSE
DESCRIPTOR.message_types_by_name['ColourRequest'] = _COLOURREQUEST
DESCRIPTOR.message_types_by_name['ColourResponse'] = _COLOURRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

PowerRequest = _reflection.GeneratedProtocolMessageType('PowerRequest', (_message.Message,), {
  'DESCRIPTOR' : _POWERREQUEST,
  '__module__' : 'lights_pb2'
  # @@protoc_insertion_point(class_scope:PowerRequest)
  })
_sym_db.RegisterMessage(PowerRequest)

PowerResponse = _reflection.GeneratedProtocolMessageType('PowerResponse', (_message.Message,), {
  'DESCRIPTOR' : _POWERRESPONSE,
  '__module__' : 'lights_pb2'
  # @@protoc_insertion_point(class_scope:PowerResponse)
  })
_sym_db.RegisterMessage(PowerResponse)

ColourRequest = _reflection.GeneratedProtocolMessageType('ColourRequest', (_message.Message,), {
  'DESCRIPTOR' : _COLOURREQUEST,
  '__module__' : 'lights_pb2'
  # @@protoc_insertion_point(class_scope:ColourRequest)
  })
_sym_db.RegisterMessage(ColourRequest)

ColourResponse = _reflection.GeneratedProtocolMessageType('ColourResponse', (_message.Message,), {
  'DESCRIPTOR' : _COLOURRESPONSE,
  '__module__' : 'lights_pb2'
  # @@protoc_insertion_point(class_scope:ColourResponse)
  })
_sym_db.RegisterMessage(ColourResponse)



_LIGHTSERVICE = _descriptor.ServiceDescriptor(
  name='LightService',
  full_name='LightService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=146,
  serialized_end=255,
  methods=[
  _descriptor.MethodDescriptor(
    name='powerOn',
    full_name='LightService.powerOn',
    index=0,
    containing_service=None,
    input_type=_POWERREQUEST,
    output_type=_POWERRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='changeColour',
    full_name='LightService.changeColour',
    index=1,
    containing_service=None,
    input_type=_COLOURREQUEST,
    output_type=_COLOURRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LIGHTSERVICE)

DESCRIPTOR.services_by_name['LightService'] = _LIGHTSERVICE

# @@protoc_insertion_point(module_scope)
